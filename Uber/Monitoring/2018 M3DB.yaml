---
name: Monitoring with M3
reference:
   text: https://eng.uber.com/m3/
   img: http://1fykyq3mdn5r21tpna3wkdyi-wpengine.netdna-ssl.com/wp-content/uploads/2018/08/image4-1.png
description: |
   Distributed Prometheus and Graphite compatible metrics database
   using an improved TSZ compression variant. For performance reasons
   downsampling happens at collection time as per user-defined rules.
   
date: 2018-08-07

solutions:
  - M3DB
  - M3Coordinator
  - Prometheus
  - Grafana
  - etcd
  - Prometheus node_exporter
  
metrics:
   max-storage: 100PB
   max-metrics: 6.600.000.000
   max-metrics-aggregated-per-second: 500.000.000
   max-metrics-stored-per-second: 20.000.000
   retention-granularity: "30d at 10s, 5y at 1h"

flowchart: |
  [Grafana] -> [Prometheus]
  [Prometheus] sidecar +- [M3Coordinator]
  [AlertManager] <- [Prometheus]
  
  [M3Coordinator] -> [<database>M3DB|
    [Index]
    [etcd]
  ] 
  [Remote Regions]--[<note>|Cascading is possible to
  other M3DBs using
  M3Coordinator. This way
  a single Grafana can access
  a distributed M3DB setup.]
  
  [M3DB]1 -> *[<frame>Remote Regions|
    [M3Coordinator]->[<database>M3DB]
  ]

